#include <Servo.h>
#include "HX711.h"

// Motor DC
const int motorPin1 = 11;
const int motorPin2 = 12;

const int loadCellDoutPin = 9;
const int loadCellSckPin = 10;

HX711 scale;

const int normalPosition = 90;
// Servo 1
Servo servo1;
const int servo1Pin = 2;
// Servo 2 
Servo servo2;
const int servo2Pin = 3;

// Color sensor pins
const int S0 = 4;
const int S1 = 5;
const int S2 = 6;
const int S3 = 7;
const int sensorOut = 8;

int redFrequency = 0;
int greenFrequency = 0;
int blueFrequency = 0;

void setup() {
  pinMode(motorPin1, OUTPUT);
  pinMode(motorPin2, OUTPUT);

  scale.begin(loadCellDoutPin, loadCellSckPin);

  servo1.attach(servo1Pin);
  servo2.attach(servo2Pin);

  // Setting the outputs for the color sensor
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  // Setting the sensorOut as an input
  pinMode(sensorOut, INPUT);

  // Setting frequency scaling to 20%
  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);

  // Begins serial communication
  Serial.begin(9600);
}

void loop() {
  // Motor DC operation
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, LOW);

  float weight = measureWeight();
  Serial.print("Weight: ");
  Serial.print(weight);
  Serial.println(" kg");

  // Check weight and actuate Servo 1
  if (weight <= 0.2) {
    servo1.write(45);
    delay(1000); 
  } else {
    servo1.write(45);
    delay(1000); 
  }

  // Setting RED (R) filtered photodiodes to be read
  digitalWrite(S2,LOW);
  digitalWrite(S3,LOW);
  
  // Reading the output frequency
  redFrequency = pulseIn(sensorOut, LOW);
  
   // Printing the RED (R) value
  Serial.print("R = ");
  Serial.print(redFrequency);
  delay(100);
  
  // Setting GREEN (G) filtered photodiodes to be read
  digitalWrite(S2,HIGH);
  digitalWrite(S3,HIGH);
  
  // Reading the output frequency
  greenFrequency = pulseIn(sensorOut, LOW);
  
  // Printing the GREEN (G) value  
  Serial.print(" G = ");
  Serial.print(greenFrequency);
  delay(100);
 
  // Setting BLUE (B) filtered photodiodes to be read
  digitalWrite(S2,LOW);
  digitalWrite(S3,HIGH);
  
  // Reading the output frequency
  blueFrequency = pulseIn(sensorOut, LOW);
  
  // Printing the BLUE (B) value 
  Serial.print(" B = ");
  Serial.println(blueFrequency);
  delay(100);

  // Determine the color based on RGB values
  determineColor(redFrequency, greenFrequency, blueFrequency);
  delay(100);

  // Motor DC operation
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, LOW);
}

float measureWeight() {
  // Read the raw value from the load cell
  long rawValue = scale.read();

  // Convert the raw value to weight (adjust the calibration factor as needed)
  float calibrationFactor = -5000000; // Adjust this based on your calibration
  float weight = rawValue / calibrationFactor;

  return weight;
}

void determineColor(int red, int green, int blue) {
  // Add more conditions based on the color ranges
  if (red > green && red > blue) {
    Serial.println("Color: Red");
  } else if (green > red && green > blue) {
    Serial.println("Color: Green");
    servo2.write(45);
    delay(1000);
  } else if (blue > red && blue > green) {
    Serial.println("Color: Blue");
    servo2.write(135);
    delay(1000);
  } else {
    Serial.println("Color: Unknown");
  }
}
