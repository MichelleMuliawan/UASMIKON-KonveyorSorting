#include <Servo.h>
#include "HX711.h"
#include <Wire.h>
#include <Adafruit_MLX90614.h>

Adafruit_MLX90614 mlx = Adafruit_MLX90614();

const int motorPin1 = 11;
const int motorPin2 = 12;
const int loadCellDoutPin = 9;
const int loadCellSckPin = 10;

HX711 scale;

Servo servo1;
const int servo1Pin = 2;
Servo servo2;
const int servo2Pin = 3;

const int S0 = 4;
const int S1 = 5;
const int S2 = 6;
const int S3 = 7;
const int sensorOut = 8;

int redFrequency = 0;
int greenFrequency = 0;
int blueFrequency = 0;

void setup() {
  pinMode(motorPin1, OUTPUT);
  pinMode(motorPin2, OUTPUT);

  scale.begin(loadCellDoutPin, loadCellSckPin);

  servo1.attach(servo1Pin);
  servo2.attach(servo2Pin);

  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  pinMode(sensorOut, INPUT);

  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);

  Serial.begin(9600);
  mlx.begin();
}

void loop() {
  digitalWrite(motorPin1, HIGH);
  digitalWrite(motorPin2, LOW);

  readTemperatureAndWeight();

  redFrequency = pulseIn(sensorOut, LOW);
  Serial.print("R = ");
  Serial.print(redFrequency);
  delay(1000);

  greenFrequency = pulseIn(sensorOut, LOW);
  Serial.print(" G = ");
  Serial.print(greenFrequency);
  delay(1000);

  blueFrequency = pulseIn(sensorOut, LOW);
  Serial.print(" B = ");
  Serial.println(blueFrequency);
  delay(1000);

  determineColor(redFrequency, greenFrequency, blueFrequency);

  delay(1000);
}

float measureWeight() {
  long rawValue = scale.read();
  float calibrationFactor = -5000000;
  float weight = rawValue / calibrationFactor;
  return weight;
}

void determineColor(int red, int green, int blue) {
  if (red > green && red > blue) {
    Serial.println("Color: Red");
    Serial.print("Red\n");
    readTemperatureAndWeight();
  } else if (green > red && green > blue) {
    Serial.println("Color: Green");
    servo2.write(45);
    delay(1000);
    Serial.print("Green\n");
    readTemperatureAndWeight();
  } else {
    Serial.println("Color: Unknown");
    Serial.print("Unknown\n");
  }
}

void readTemperatureAndWeight() {
  int object_temp_c = mlx.readObjectTempC();
  int object_temp_f = mlx.readObjectTempF();
  int ambient_temp_c = mlx.readAmbientTempC();
  int ambient_temp_f = mlx.readAmbientTempF();

  // Send temperature information to Processing
  Serial.println("---------------------");
  Serial.print("Object Temperature = ");
  Serial.print(object_temp_c);
  Serial.print(" \xC2\xB0C (or) ");
  Serial.print(object_temp_f);
  Serial.println(" \xC2\xB0F");

  Serial.print("Ambient Temperature = ");
  Serial.print(ambient_temp_c);
  Serial.print(" \xC2\xB0C (or) ");
  Serial.print(ambient_temp_f);
  Serial.println(" \xC2\xB0F");

  Serial.println("---------------------");

  float weight = measureWeight();
  Serial.print("Weight: ");
  Serial.print(weight);
  Serial.println(" kg");

  // Send data to Processing
  Serial.print("Suhu: ");
  Serial.print(object_temp_c);  // You can choose Celsius or Fahrenheit based on your preference
  Serial.print(", Weight: ");
  Serial.println(weight);
}
